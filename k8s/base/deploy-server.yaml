# yaml-language-server: $schema=https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/master-standalone/deployment-apps-v1.json

apiVersion: apps/v1
kind: Deployment
metadata:
  name: server
  labels:
    app.kubernetes.io/component: server
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: server
  template:
    metadata:
      labels:
        app.kubernetes.io/component: server
    spec:
      securityContext:
        fsGroup: 1000
      volumes:
        - name: tmp
          emptyDir:
            sizeLimit: 5Gi
        - name: static
          emptyDir:
            sizeLimit: 128Mi
      initContainers:
        - name: check-db-ready
          image: postgres:14-alpine
          command:
            - sh
            - -c
            - |
              until pg_isready --username=$DB_USER --dbname=$DB_NAME --host=$DB_HOST --port=$DB_PORT;
                do echo waiting for database;
                sleep 1;
                done;

          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true

          envFrom:
            - configMapRef:
                name: env
                optional: false
            - secretRef:
                name: env
                optional: false

          resources:
            requests:
              cpu: 50m
              memory: 16Mi
            limits:
              cpu: 50m
              memory: 16Mi

        - name: django-migrate
          image: datalab
          command:
            - python
            - manage.py
            - migrate
            - --no-input

          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true

          volumeMounts:
            - name: tmp
              mountPath: /tmp

          envFrom:
            - configMapRef:
                name: env
                optional: false
            - secretRef:
                name: env
                optional: false

        - name: django-collectstatic
          image: datalab
          command:
            - python
            - manage.py
            - collectstatic
            - --no-input

          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true

          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: static
              mountPath: /static
              readOnly: false

          envFrom:
            - configMapRef:
                name: env
                optional: false
            - secretRef:
                name: env
                optional: false

      containers:
        - name: default
          image: datalab
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          command:
            - gunicorn
            - --bind=0.0.0.0:8080
            - --worker-class=gevent
            - --workers=$(GUNICORN_WORKERS)
            - --timeout=$(GUNICORN_TIMEOUT)
            - --access-logfile=-
            - --error-logfile=-
            - datalab.wsgi
          env:
            - name: GUNICORN_WORKERS
              value: "2"
            - name: GUNICORN_TIMEOUT
              value: "300"
          envFrom:
            - configMapRef:
                name: env
                optional: false
            - secretRef:
                name: env
                optional: false
          ports:
            - name: server
              containerPort: 8080
              protocol: TCP
          volumeMounts:
            - name: tmp
              mountPath: /tmp
              readOnly: false
            - name: static
              mountPath: /static
          livenessProbe:
            initialDelaySeconds: 15
            timeoutSeconds: 3
            httpGet:
              path: /admin/login/
              port: server
          readinessProbe:
            initialDelaySeconds: 15
            timeoutSeconds: 3
            httpGet:
              path: /admin/login/
              port: server
        - name: cleanup
          image: datalab
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          command: ["/bin/sh", "-c"]
          args:
          - >
            while true;
            do
              find /tmp/fits -type f -cmin +65 -delete;
              sleep 10m;
            done
          envFrom:
            - configMapRef:
                name: env
                optional: false
            - secretRef:
                name: env
                optional: false
          volumeMounts:
            - name: tmp
              mountPath: /tmp
              readOnly: false
